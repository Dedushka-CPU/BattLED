#include <Arduino_LED_Matrix.h>

ArduinoLEDMatrix matrix;

// Массив для отображения числа
byte display[8][12];

// Шаблоны цифр 0-9 
const byte digits[10][8][4] = {
  // 0
  {{1,1,1,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,1,1,1}},
  // 1
  {{0,0,1,0},
   {0,1,1,0},
   {0,0,1,0},
   {0,0,1,0},
   {0,0,1,0},
   {0,0,1,0},
   {0,0,1,0},
   {0,1,1,1}},
  // 2
  {{1,1,1,1},
   {0,0,0,1},
   {0,0,0,1},
   {0,0,1,0},
   {0,1,0,0},
   {1,0,0,0},
   {1,0,0,0},
   {1,1,1,1}},
  // 3
  {{1,1,1,1},
   {0,0,0,1},
   {0,0,0,1},
   {1,1,1,1},
   {0,0,0,1},
   {0,0,0,1},
   {0,0,0,1},
   {1,1,1,1}},
  // 4
  {{1,0,0,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,1,1,1},
   {0,0,0,1},
   {0,0,0,1},
   {0,0,0,1},
   {0,0,0,1}},
  // 5
  {{1,1,1,1},
   {1,0,0,0},
   {1,0,0,0},
   {1,1,1,1},
   {0,0,0,1},
   {0,0,0,1},
   {0,0,0,1},
   {1,1,1,1}},
  // 6
  {{1,1,1,1},
   {1,0,0,0},
   {1,0,0,0},
   {1,1,1,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,1,1,1}},
  // 7
  {{1,1,1,1},
   {0,0,0,1},
   {0,0,0,1},
   {0,0,1,0},
   {0,0,1,0},
   {0,1,0,0},
   {0,1,0,0},
   {0,1,0,0}},
  // 8
  {{1,1,1,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,1,1,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,1,1,1}},
  // 9
  {{1,1,1,1},
   {1,0,0,1},
   {1,0,0,1},
   {1,1,1,1},
   {0,0,0,1},
   {0,0,0,1},
   {0,0,0,1},
   {1,1,1,1}}
};

void setup() {
  Serial.begin(9600);  // Начинаем Serial-соединение
  matrix.begin();
  
  // Начальное мигание
  for (int i = 0; i < 3; i++) {
    matrix.renderBitmap(display, 8, 12);
    delay(300);
    clearDisplay();
    matrix.renderBitmap(display, 8, 12);
    delay(300);
  }
}

void loop() {
  if (Serial.available() > 0) {
    int batteryLevel = Serial.parseInt();  // Читаем число из Serial
    batteryLevel = constrain(batteryLevel, 0, 99);  // Ограничиваем 0-99% (2 цифры)
    
    updateBatteryDisplay(batteryLevel);
    matrix.renderBitmap(display, 8, 12);
    
    // Очищаем буфер Serial
    while (Serial.available() > 0) {
      Serial.read();
    }
  }
  delay(100);
}

// Функция обновления отображения числа
void updateBatteryDisplay(int level) {
  clearDisplay();
  
  // Разбиваем число на десятки и единицы
  int tens = level / 10;    // Десятки (например, 4 в 42)
  int ones = level % 10;    // Единицы (например, 2 в 42)

  // Отображаем десятки (если не 0) в левой части
  if (tens > 0) {
    for (int row = 0; row < 8; row++) {
      for (int col = 0; col < 4; col++) {
        display[row][col] = digits[tens][row][col];
      }
    }
  }

  // Отображаем единицы в правой части (с отступом)
  for (int row = 0; row < 8; row++) {
    for (int col = 0; col < 4; col++) {
      display[row][col + 5] = digits[ones][row][col];  // Сдвиг на 5 столбцов
    }
  }
}

// Очистка дисплея
void clearDisplay() {
  for (int row = 0; row < 8; row++) {
    for (int col = 0; col < 12; col++) {
      display[row][col] = 0;
    }
  }
}